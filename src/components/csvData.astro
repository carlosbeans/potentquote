---
import { readFileSync } from 'fs';
import { parse } from 'csv-parse/sync';
import { fileURLToPath } from 'url';
import path from 'path';

interface Quote {
  id: string;
  quote: string;
  author: string;
  categories: string[];
}

export async function fetchQuotes(): Promise<Quote[]> {
  try {
    // Get the directory of the current module
    const __filename = fileURLToPath(import.meta.url);
    const __dirname = path.dirname(__filename);
    
    // Path to the CSV file
    const csvPath = path.join(__dirname, '../../src/data/Quotes.csv');
    const file = readFileSync(csvPath, 'utf-8');

    // Parse CSV and transform data
    const records = parse(file, {
      columns: true,
      skip_empty_lines: true,
      trim: true
    });

    return records.map((row: any, index: number) => ({
      id: `quote-${index + 1}`,
      quote: row.Quote,
      author: row.Author.split('|')[0].trim(), // Get just the name part if there's a pipe
      categories: row.Category.split(';').map((cat: string) => cat.trim())
    }));
  } catch (error) {
    console.error('Error reading or parsing CSV:', error);
    return [];
  }
}
---
