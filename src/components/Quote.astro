---

interface Quote {
  id: string;
  quote: string;
  author: string;
  category: string;
}

interface Props {
  quote: Quote;
}

const { quote } = Astro.props;

---


<style>
/* Base Typography */
.eb-garamond-serif {
  font-family: "EB Garamond", serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

/* Quote Container */
.quote {
  min-height: 100svh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: relative;
  cursor: none;
}

/* Quote Text */
.quote-text {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 4rem;
  line-height: 100%;
  margin: 0;
  padding: 0;
  position: relative;
  z-index: 1;
}

/* Action Container */
.actionContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 44px;
  height: 44px;
  cursor: none;
  background: white;
  border-radius: 50%;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  position: absolute;
  top: 0;
  left: 0;
  transform: translate(-50%, -50%);
  pointer-events: none;
  z-index: 10;
  opacity: 0;
  transition: opacity .1s ease-in-out;
                
  
  /* Active State */
  &.active {
    background: #1E2749;
    color: #fff;
    transform: translate(-50%, -50%) scale(1.1);
  }

  /* Hover & Active States */
  &:hover {
    transform: translate(-50%, -50%) scale(1.05);
  }

  &:active {
    transform: translate(-50%, -50%) scale(1);
  }
  
  /* Icons */
  .checkmarkIcon, .clipboardIcon {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    width: 22px;
    height: 22px; 
    margin: 0 auto;
    opacity: 1;
    transition: opacity .1s cubic-bezier(0.68, -0.6, 0.32, 1.6), 
                transform .2s cubic-bezier(0.68, -0.6, 0.32, 1.6);
  }
  
  .checkmarkIcon {
    opacity: 0;
    transform: scale(.9);
  }
  
  &.active {
    .checkmarkIcon {
      opacity: 1;
      transition-delay: .1s;
      transform: scale(1);
    }
    .clipboardIcon {    
      opacity: 0;
    }
  }
}

/* Quote Metadata */
.quote-meta {
  margin-top: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  text-transform: lowercase;
}

.author {
  text-transform: capitalize;
  font-weight: bold;
  font-size: 1.2rem;
}

.category {
  font-size: 0.9rem;
}

/* Click Region */
.quoteClickRegion {
  position: relative;
  z-index: 2;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  cursor: pointer;
}
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Get all quote containers
    const quoteContainers = document.querySelectorAll('.quote-container');
    
    // Initialize each quote container
    quoteContainers.forEach(container => {
      const actionContainer = container.querySelector('.actionContainer');
      if (!actionContainer) return;

      // Make the actionContainer clickable
      (actionContainer as HTMLElement).style.pointerEvents = 'auto';
      
      // Add click handler for copying text and showing feedback
      actionContainer.addEventListener('click', function(this: HTMLElement) {
        const quoteText = container.querySelector('.quote-text')?.textContent || '';
        
        // Copy to clipboard
        navigator.clipboard.writeText(quoteText.trim())
          .then(() => {
            // Show visual feedback
            this.classList.add('active');
            setTimeout(() => this.classList.remove('active'), 2000);
          })
          .catch(err => {
            console.error('Failed to copy text: ', err);
          });
      });

      // Track mouse movement
      container.addEventListener('mousemove', (e: Event) => {
        const mouseEvent = e as MouseEvent;
        const rect = container.getBoundingClientRect();
        
        // Calculate position relative to the container
        let x = mouseEvent.clientX - rect.left;
        let y = mouseEvent.clientY - rect.top;
        
        // Keep the actionContainer within the container bounds
        x = Math.max(0, Math.min(x, rect.width));
        y = Math.max(0, Math.min(y, rect.height));
        
        // Update position
        (actionContainer as HTMLElement).style.left = `${x}px`;
        (actionContainer as HTMLElement).style.top = `${y}px`;
      });

      // Hide actionContainer when mouse leaves the container
      container.addEventListener('mouseleave', () => {
        (actionContainer as HTMLElement).style.opacity = '0';
      });

      // Show actionContainer when mouse enters the container
      container.addEventListener('mouseenter', () => {
        (actionContainer as HTMLElement).style.opacity = '1';
      });
    });
  });
</script>

<div class="quote eb-garamond-serif quote-container">
  <div class="actionContainer">
    <div class="clipboardIcon">
      <svg width="18" height="22" viewBox="0 0 18 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9.60254 16.0049C10.1067 16.0562 10.5 16.4823 10.5 17C10.5 17.5177 10.1067 17.9438 9.60254 17.9951L9.5 18H4.5C3.94772 18 3.5 17.5523 3.5 17C3.5 16.4477 3.94772 16 4.5 16H9.5L9.60254 16.0049Z" fill="currentColor"/>
        <path d="M13.75 11.75C14.3023 11.75 14.75 12.1977 14.75 12.75C14.75 13.3023 14.3023 13.75 13.75 13.75H4.5C3.94772 13.75 3.5 13.3023 3.5 12.75C3.5 12.1977 3.94772 11.75 4.5 11.75H13.75Z" fill="currentColor"/>
        <path d="M13.75 7.75C14.3023 7.75 14.75 8.19772 14.75 8.75C14.75 9.30228 14.3023 9.75 13.75 9.75H4.5C3.94772 9.75 3.5 9.30228 3.5 8.75C3.5 8.19772 3.94772 7.75 4.5 7.75H13.75Z" fill="currentColor"/>
        <path fill-rule="evenodd" clip-rule="evenodd" d="M12 0C13.1046 0 14 0.89543 14 2H15L15.2969 2.01465C15.9835 2.08291 16.6289 2.38671 17.1211 2.87891C17.6837 3.44152 18 4.20435 18 5V19C18 19.7957 17.6837 20.5585 17.1211 21.1211C16.5585 21.6837 15.7957 22 15 22H3C2.20435 22 1.44152 21.6837 0.878906 21.1211C0.386708 20.6289 0.0829076 19.9835 0.0146484 19.2969L0 19V5C0 4.20435 0.316297 3.44152 0.878906 2.87891C1.44152 2.3163 2.20435 2 3 2H4C4 0.89543 4.89543 0 6 0H12ZM3 4C2.73478 4 2.48051 4.10543 2.29297 4.29297C2.10543 4.48051 2 4.73478 2 5V19L2.00488 19.0986C2.02757 19.3276 2.12883 19.5429 2.29297 19.707C2.48051 19.8946 2.73478 20 3 20H15C15.2652 20 15.5195 19.8946 15.707 19.707C15.8946 19.5195 16 19.2652 16 19V5C16 4.73478 15.8946 4.48051 15.707 4.29297C15.5429 4.12883 15.3276 4.02757 15.0986 4.00488L15 4H14C14 5.10457 13.1046 6 12 6H6C4.89543 6 4 5.10457 4 4H3ZM6 4H12V2H6V4Z" fill="currentColor"/>
      </svg>
    </div>
    <div class="checkmarkIcon">          
      <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M19.871 5.121L8.3105 16.6815L2 10.371L4.121 8.25L8.3105 12.4395L17.75 3L19.871 5.121Z" fill="currentColor"/>
      </svg>
    </div>
  </div>
  <div class="quoteClickRegion">
    <blockquote class="quote-text" id="quote-{quote.id}">    
      {quote.quote}
    </blockquote>
    <div class="quote-meta">
      <span class="author">â€” {quote.author}</span>
      <span class="category">#{quote.category}</span>
    </div>
  </div>  
</div>
